#!/bin/bash

set -eu

# needs to be specific to not include zsh and some people do odd /usr/bin/env bash things
SHEBANG_REGEX='^#\( *shellcheck \|!\(/bin/\|/usr/bin/env \)\(sh\|bash\|dash\|ksh\)\)'
WORKFLOW=.github/workflows/shellcheck.yml

if ! git grep "$SHEBANG_REGEX"; then
    echo "No shell scripts found, no need"
    exit 0
fi

source "$(readlink -f "$0" | xargs dirname)/common.sh"

function list() {
	# git grep -l "$SHEBANG_REGEX" | grep -v '\.\(txt\|md\)'
    # custom way to grep only the first line
    git grep -n "$SHEBANG_REGEX" \
    | grep ':1:#' \
    | sed -e 's,:.*,,g' \
	| grep -v '\.\(txt\|md\)'
}

function doit() {
	list | xargs shellcheck "$@"
}

function autopatch() {
    list | xargs shellcheck -f diff | patch -p1
}

function generate_workflow() {
	# we might need to overload branch if we already have it and just updating
	if [ -e "$WORKFLOW" ]; then
		branch_=$(sed -n -e '/branches:/s,.*\[\(.*\)\].*,\1,gp' "$WORKFLOW" | uniq)
		if [ -n "$branch_" ]; then
			branch="$branch_"
		fi
	fi
	cat > "$WORKFLOW" << EOF
---
name: Shellcheck

on:
  push:
    branches: [$branch]
  pull_request:
    branches: [$branch]

permissions:
  contents: read

jobs:
  shellcheck:
    name: Check shell scripts
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt update && sudo apt install -y shellcheck
      - name: shellcheck
        run: |
          git grep -l '$SHEBANG_REGEX' | xargs shellcheck
EOF
}

# poor man shortcuts for just doing it using the regex etc
case "${1:-}" in
	list) shift; list "$@"; exit $?;;
	doit) shift; doit "$@"; exit $?;;
	autopatch) shift; autopatch "$@"; exit $?;;
	generate_workflow) generate_workflow; exit $?;;
esac

if [ -e "$WORKFLOW" ]; then
    echo "$WORKFLOW already exists -- we must be good"
    exit 0
fi

git checkout -b enh-shellcheck

generate_workflow
git add "$WORKFLOW"
git commit -m "Add github action to shellcheck $branch on push and PRs"

if [ -e .pre-commit-config.yaml ]; then
    # add pre-commit configuration there
    cat >> .pre-commit-config.yaml <<EOF

- repo: https://github.com/koalaman/shellcheck-precommit
  rev: v0.9.0
  hooks:
  - id: shellcheck
EOF

    git add .pre-commit-config.yaml
    git commit -m 'Add pre-commit definition for shellcheck'
fi


doit
